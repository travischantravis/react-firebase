{"version":3,"sources":["components/layout/SingedInLinks.js","store/actions/authActions.js","components/layout/SingedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","isLoaded","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","React","Boolean","window","location","hostname","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.0f9bb2d5.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\n// because it is a functional component, I can't say this.props. I have to pass props as argument\nconst SignedInLinks = (props) => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Projects</NavLink>\n      </li>\n      <li>\n        <a onClick={props.signOut}>Log Out</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut()),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","// an action creator\nexport const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    // async call\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then((resp) => {\n        return firestore\n          .collection(\"users\")\n          .doc(resp.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0],\n          });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"SIGNUP_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Log In</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./SingedInLinks\";\nimport SignedOutLinks from \"./SingedOutLinks\";\nimport { connect } from \"react-redux\";\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n\n  // output depending on auth status\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          MarioPlan\n        </Link>\n        {auth.isLoaded && links}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  // return the things we want to attach to the props\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n            {notifications &&\n              notifications.map((item) => {\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user} </span>\n                    <span>{item.content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>\n          Posted by {project.authorFirstName} {project.authorLastName}\n        </p>\n        <p className=\"grey-text\">\n          {moment(project.createdAt.toDate()).calendar()}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project-list section\">\n      {projects &&\n        projects.map((project) => {\n          return (\n            <Link to={\"/project/\" + project.id} key={project.id}>\n              <ProjectSummary project={project} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// state is the state of the Redux store\nconst mapStateToProps = (state) => {\n  // state returns all the reducers binded in rootReducer\n  // console.log(state);\n  return {\n    // sync from firestore to component\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications,\n  };\n};\n\nexport default compose(\n  // mapStateToProps: connect react component with redux store\n  connect(mapStateToProps),\n\n  // when this component is active, the collection I want to listen to is called 'projects' and 'notifications'\n  // when data in the collection is changed, the firestore reducer is induced to sync the store state with firestore\n  firestoreConnect([\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 5, orderBy: [\"time\", \"desc\"] },\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst ProjectDetails = (props) => {\n  // destructing props.project\n  const { project, auth } = props;\n\n  // Route guarding\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>\n              Posted by {project.authorFirstName} {project.authorLastName}\n            </div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    {\n      collection: \"projects\",\n    },\n  ])\n)(ProjectDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n  handleChange = (e) => {\n    this.setState({\n      // square brackets allow it to recognise which elememt the user is inputting, thus this class property can be reused multiple times\n      [e.target.id]: e.target.value,\n    });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n  };\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  };\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../store/actions/projectActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \"\",\n  };\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n\n    // Redirect to home page after clicking Create Project\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { auth } = this.props;\n\n    // Route guarding\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea\n              id=\"content\"\n              className=\"materialize-textarea\"\n              onChange={this.handleChange}\n            ></textarea>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n  };\n};\n\n// Instead of calling props.dispatch(() => createProject()),\n// you may call props.createProject() directly.\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","// returns a function instead of an action\nexport const createProject = (project) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    // make async call to database\n    const firestore = getFirestore();\n\n    // getState()\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n\n    firestore\n      .collection(\"projects\")\n      .add({\n        // same as project.title, project.content\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: new Date(),\n      })\n      .then(() => {\n        // Dispatch\n        dispatch({ type: \"CREATE_PROJECT\", project });\n      })\n      .catch((err) => {\n        // Dispatch err object\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  authError: null,\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      console.log(\"login err\");\n      return { ...state, authError: \"Login failed\" };\n    case \"LOGIN_SUCCESS\":\n      console.log(\"login success\");\n      return {\n        // spread operator is used to avoid overwriting what is in the state\n        ...state,\n        authError: null,\n      };\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"signout success\");\n      return state;\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"signup success\");\n      return {\n        ...state,\n        authError: null,\n      };\n    case \"SIGNUP_ERROR\":\n      console.log(\"signup error\");\n      return {\n        ...state,\n        authError: action.err.message,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  projects: [\n    { id: \"1\", title: \"help me find peach\", content: \"blah blah blah\" },\n    { id: \"2\", title: \"collect all the stars\", content: \"blah blah blah\" },\n    { id: \"3\", title: \"egg hunt with yoshi\", content: \"blah blah blah\" },\n  ],\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT\":\n      console.log(\"created project\", action.project);\n      return state;\n    case \"CREATE_PROJECT_ERRPR\":\n      console.log(\"create project error\", action.err);\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport { combineReducers } from \"redux\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  // sync our firestore with the store state\n  firestore: firestoreReducer,\n  // sync auth status on firebase with Redux state\n  firebase: firebaseReducer,\n});\n\nexport default rootReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDwg4ZX0AR-PiE-HnXkgRX7UyjavCGiJAg\",\n  authDomain: \"net-ninja-marioplan-9cabf.firebaseapp.com\",\n  databaseURL: \"https://net-ninja-marioplan-9cabf.firebaseio.com\",\n  projectId: \"net-ninja-marioplan-9cabf\",\n  storageBucket: \"net-ninja-marioplan-9cabf.appspot.com\",\n  messagingSenderId: \"199325876670\",\n  appId: \"1:199325876670:web:381e9598a5646d8540f9ef\",\n  measurementId: \"G-617B2Y19PL\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\nfirebase.firestore();\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  createFirestoreInstance,\n  reduxFirestore,\n  getFirestore,\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\n\nconst store = createStore(\n  rootReducer,\n  // Binding all 3 store enhancers\n  compose(\n    // Thunk is a middleware\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n\n// Vid 29 comments\nconst profileSpecificProps = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false,\n};\n\n// Vid 18 comments\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}